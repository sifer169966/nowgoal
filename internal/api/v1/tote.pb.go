// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: tote.proto

package tote

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HealthCheckToteResponse_ServingStatus int32

const (
	HealthCheckToteResponse_UNKNOWN     HealthCheckToteResponse_ServingStatus = 0
	HealthCheckToteResponse_SERVING     HealthCheckToteResponse_ServingStatus = 1
	HealthCheckToteResponse_NOT_SERVING HealthCheckToteResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckToteResponse_ServingStatus.
var (
	HealthCheckToteResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckToteResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckToteResponse_ServingStatus) Enum() *HealthCheckToteResponse_ServingStatus {
	p := new(HealthCheckToteResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckToteResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckToteResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tote_proto_enumTypes[0].Descriptor()
}

func (HealthCheckToteResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_tote_proto_enumTypes[0]
}

func (x HealthCheckToteResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckToteResponse_ServingStatus.Descriptor instead.
func (HealthCheckToteResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{19, 0}
}

type UpdateToteProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api                string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IpClient           string               `protobuf:"bytes,2,opt,name=ipClient,proto3" json:"ipClient,omitempty"`
	UpdateToteProducts []*UpdateToteProduct `protobuf:"bytes,3,rep,name=updateToteProducts,proto3" json:"updateToteProducts,omitempty"`
}

func (x *UpdateToteProductsRequest) Reset() {
	*x = UpdateToteProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateToteProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateToteProductsRequest) ProtoMessage() {}

func (x *UpdateToteProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateToteProductsRequest.ProtoReflect.Descriptor instead.
func (*UpdateToteProductsRequest) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateToteProductsRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *UpdateToteProductsRequest) GetIpClient() string {
	if x != nil {
		return x.IpClient
	}
	return ""
}

func (x *UpdateToteProductsRequest) GetUpdateToteProducts() []*UpdateToteProduct {
	if x != nil {
		return x.UpdateToteProducts
	}
	return nil
}

type UpdateToteProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToteProductID     string `protobuf:"bytes,3,opt,name=toteProductID,proto3" json:"toteProductID,omitempty"`
	ToteID            string `protobuf:"bytes,4,opt,name=toteID,proto3" json:"toteID,omitempty"`
	Quantity          int32  `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ToteProductStatus string `protobuf:"bytes,6,opt,name=toteProductStatus,proto3" json:"toteProductStatus,omitempty"`
}

func (x *UpdateToteProduct) Reset() {
	*x = UpdateToteProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateToteProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateToteProduct) ProtoMessage() {}

func (x *UpdateToteProduct) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateToteProduct.ProtoReflect.Descriptor instead.
func (*UpdateToteProduct) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateToteProduct) GetToteProductID() string {
	if x != nil {
		return x.ToteProductID
	}
	return ""
}

func (x *UpdateToteProduct) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

func (x *UpdateToteProduct) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdateToteProduct) GetToteProductStatus() string {
	if x != nil {
		return x.ToteProductStatus
	}
	return ""
}

type UpdateToteProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api            string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	ToteProductIDs []string `protobuf:"bytes,2,rep,name=toteProductIDs,proto3" json:"toteProductIDs,omitempty"`
}

func (x *UpdateToteProductsResponse) Reset() {
	*x = UpdateToteProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateToteProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateToteProductsResponse) ProtoMessage() {}

func (x *UpdateToteProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateToteProductsResponse.ProtoReflect.Descriptor instead.
func (*UpdateToteProductsResponse) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateToteProductsResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *UpdateToteProductsResponse) GetToteProductIDs() []string {
	if x != nil {
		return x.ToteProductIDs
	}
	return nil
}

type Tote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToteID     string `protobuf:"bytes,1,opt,name=ToteID,proto3" json:"ToteID,omitempty"`
	CustomerID string `protobuf:"bytes,2,opt,name=customerID,proto3" json:"customerID,omitempty"`
	CreatedAt  int32  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int32  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Tote) Reset() {
	*x = Tote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tote) ProtoMessage() {}

func (x *Tote) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tote.ProtoReflect.Descriptor instead.
func (*Tote) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{3}
}

func (x *Tote) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

func (x *Tote) GetCustomerID() string {
	if x != nil {
		return x.CustomerID
	}
	return ""
}

func (x *Tote) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Tote) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToteProductID     string  `protobuf:"bytes,1,opt,name=ToteProductID,proto3" json:"ToteProductID,omitempty"`
	ToteID            string  `protobuf:"bytes,2,opt,name=toteID,proto3" json:"toteID,omitempty"`
	ProductID         string  `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`
	SkuID             string  `protobuf:"bytes,4,opt,name=SkuID,proto3" json:"SkuID,omitempty"`
	Quantity          int32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit      float32 `protobuf:"fixed32,6,opt,name=pricePerUnit,proto3" json:"pricePerUnit,omitempty"`
	ToteProductStatus string  `protobuf:"bytes,7,opt,name=toteProductStatus,proto3" json:"toteProductStatus,omitempty"`
	CreatedAt         int32   `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         int32   `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{4}
}

func (x *Product) GetToteProductID() string {
	if x != nil {
		return x.ToteProductID
	}
	return ""
}

func (x *Product) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

func (x *Product) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *Product) GetSkuID() string {
	if x != nil {
		return x.SkuID
	}
	return ""
}

func (x *Product) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Product) GetPricePerUnit() float32 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

func (x *Product) GetToteProductStatus() string {
	if x != nil {
		return x.ToteProductStatus
	}
	return ""
}

func (x *Product) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Product) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetToteBagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api      string               `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IpClient string               `protobuf:"bytes,2,opt,name=ipClient,proto3" json:"ipClient,omitempty"`
	FindBy   *GetToteBagsFindBy   `protobuf:"bytes,3,opt,name=findBy,proto3" json:"findBy,omitempty"`
	FilterBy *GetToteBagsFilterBy `protobuf:"bytes,4,opt,name=filterBy,proto3" json:"filterBy,omitempty"`
	OrderBy  string               `protobuf:"bytes,5,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	SortBy   *GetToteBagsSortBy   `protobuf:"bytes,6,opt,name=sortBy,proto3" json:"sortBy,omitempty"`
	// to limit product into the tote bag ...
	Limit int32 `protobuf:"varint,7,opt,name=Limit,proto3" json:"Limit,omitempty"`
	// to calculate offset of data set ...
	Page int32 `protobuf:"varint,8,opt,name=Page,proto3" json:"Page,omitempty"`
}

func (x *GetToteBagsRequest) Reset() {
	*x = GetToteBagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToteBagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToteBagsRequest) ProtoMessage() {}

func (x *GetToteBagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToteBagsRequest.ProtoReflect.Descriptor instead.
func (*GetToteBagsRequest) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{5}
}

func (x *GetToteBagsRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *GetToteBagsRequest) GetIpClient() string {
	if x != nil {
		return x.IpClient
	}
	return ""
}

func (x *GetToteBagsRequest) GetFindBy() *GetToteBagsFindBy {
	if x != nil {
		return x.FindBy
	}
	return nil
}

func (x *GetToteBagsRequest) GetFilterBy() *GetToteBagsFilterBy {
	if x != nil {
		return x.FilterBy
	}
	return nil
}

func (x *GetToteBagsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetToteBagsRequest) GetSortBy() *GetToteBagsSortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

func (x *GetToteBagsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetToteBagsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetToteBagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// amount of tote bag into database which related to the request condition ...
	AllTotesCount int32         `protobuf:"varint,2,opt,name=allTotesCount,proto3" json:"allTotesCount,omitempty"`
	TotesDetail   []*ToteDetail `protobuf:"bytes,3,rep,name=totesDetail,proto3" json:"totesDetail,omitempty"`
}

func (x *GetToteBagsResponse) Reset() {
	*x = GetToteBagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToteBagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToteBagsResponse) ProtoMessage() {}

func (x *GetToteBagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToteBagsResponse.ProtoReflect.Descriptor instead.
func (*GetToteBagsResponse) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{6}
}

func (x *GetToteBagsResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *GetToteBagsResponse) GetAllTotesCount() int32 {
	if x != nil {
		return x.AllTotesCount
	}
	return 0
}

func (x *GetToteBagsResponse) GetTotesDetail() []*ToteDetail {
	if x != nil {
		return x.TotesDetail
	}
	return nil
}

type ToteDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tote *Tote `protobuf:"bytes,1,opt,name=tote,proto3" json:"tote,omitempty"`
	// amount of products into the tote bag which related to the request condition ...
	AllProductsCount int32      `protobuf:"varint,2,opt,name=allProductsCount,proto3" json:"allProductsCount,omitempty"`
	Products         []*Product `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ToteDetail) Reset() {
	*x = ToteDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToteDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToteDetail) ProtoMessage() {}

func (x *ToteDetail) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToteDetail.ProtoReflect.Descriptor instead.
func (*ToteDetail) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{7}
}

func (x *ToteDetail) GetTote() *Tote {
	if x != nil {
		return x.Tote
	}
	return nil
}

func (x *ToteDetail) GetAllProductsCount() int32 {
	if x != nil {
		return x.AllProductsCount
	}
	return 0
}

func (x *ToteDetail) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type GetToteBagsSortBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asc  bool `protobuf:"varint,1,opt,name=asc,proto3" json:"asc,omitempty"`
	Desc bool `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *GetToteBagsSortBy) Reset() {
	*x = GetToteBagsSortBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToteBagsSortBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToteBagsSortBy) ProtoMessage() {}

func (x *GetToteBagsSortBy) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToteBagsSortBy.ProtoReflect.Descriptor instead.
func (*GetToteBagsSortBy) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{8}
}

func (x *GetToteBagsSortBy) GetAsc() bool {
	if x != nil {
		return x.Asc
	}
	return false
}

func (x *GetToteBagsSortBy) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type GetToteBagsFindBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToteID     []string `protobuf:"bytes,1,rep,name=toteID,proto3" json:"toteID,omitempty"`
	CustomerID []string `protobuf:"bytes,3,rep,name=customerID,proto3" json:"customerID,omitempty"`
}

func (x *GetToteBagsFindBy) Reset() {
	*x = GetToteBagsFindBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToteBagsFindBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToteBagsFindBy) ProtoMessage() {}

func (x *GetToteBagsFindBy) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToteBagsFindBy.ProtoReflect.Descriptor instead.
func (*GetToteBagsFindBy) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{9}
}

func (x *GetToteBagsFindBy) GetToteID() []string {
	if x != nil {
		return x.ToteID
	}
	return nil
}

func (x *GetToteBagsFindBy) GetCustomerID() []string {
	if x != nil {
		return x.CustomerID
	}
	return nil
}

type GetToteBagsFilterBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToteProducStatus []string `protobuf:"bytes,2,rep,name=toteProducStatus,proto3" json:"toteProducStatus,omitempty"`
}

func (x *GetToteBagsFilterBy) Reset() {
	*x = GetToteBagsFilterBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToteBagsFilterBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToteBagsFilterBy) ProtoMessage() {}

func (x *GetToteBagsFilterBy) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToteBagsFilterBy.ProtoReflect.Descriptor instead.
func (*GetToteBagsFilterBy) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{10}
}

func (x *GetToteBagsFilterBy) GetToteProducStatus() []string {
	if x != nil {
		return x.ToteProducStatus
	}
	return nil
}

type CreateNewToteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IpClient   string `protobuf:"bytes,2,opt,name=ipClient,proto3" json:"ipClient,omitempty"`
	CustomerID string `protobuf:"bytes,3,opt,name=customerID,proto3" json:"customerID,omitempty"`
}

func (x *CreateNewToteRequest) Reset() {
	*x = CreateNewToteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewToteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewToteRequest) ProtoMessage() {}

func (x *CreateNewToteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewToteRequest.ProtoReflect.Descriptor instead.
func (*CreateNewToteRequest) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{11}
}

func (x *CreateNewToteRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *CreateNewToteRequest) GetIpClient() string {
	if x != nil {
		return x.IpClient
	}
	return ""
}

func (x *CreateNewToteRequest) GetCustomerID() string {
	if x != nil {
		return x.CustomerID
	}
	return ""
}

type CreateNewToteReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api    string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	ToteID string `protobuf:"bytes,2,opt,name=toteID,proto3" json:"toteID,omitempty"`
}

func (x *CreateNewToteReponse) Reset() {
	*x = CreateNewToteReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNewToteReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNewToteReponse) ProtoMessage() {}

func (x *CreateNewToteReponse) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNewToteReponse.ProtoReflect.Descriptor instead.
func (*CreateNewToteReponse) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{12}
}

func (x *CreateNewToteReponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *CreateNewToteReponse) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

type DeleteProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IpClient   string   `protobuf:"bytes,2,opt,name=ipClient,proto3" json:"ipClient,omitempty"`
	ToteID     string   `protobuf:"bytes,3,opt,name=toteID,proto3" json:"toteID,omitempty"`
	ProductsID []string `protobuf:"bytes,4,rep,name=productsID,proto3" json:"productsID,omitempty"`
}

func (x *DeleteProductsRequest) Reset() {
	*x = DeleteProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductsRequest) ProtoMessage() {}

func (x *DeleteProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductsRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductsRequest) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteProductsRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *DeleteProductsRequest) GetIpClient() string {
	if x != nil {
		return x.IpClient
	}
	return ""
}

func (x *DeleteProductsRequest) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

func (x *DeleteProductsRequest) GetProductsID() []string {
	if x != nil {
		return x.ProductsID
	}
	return nil
}

type DeleteProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	ProductsID []string `protobuf:"bytes,3,rep,name=productsID,proto3" json:"productsID,omitempty"`
}

func (x *DeleteProductsResponse) Reset() {
	*x = DeleteProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductsResponse) ProtoMessage() {}

func (x *DeleteProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductsResponse.ProtoReflect.Descriptor instead.
func (*DeleteProductsResponse) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteProductsResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *DeleteProductsResponse) GetProductsID() []string {
	if x != nil {
		return x.ProductsID
	}
	return nil
}

type AddProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToteID       string  `protobuf:"bytes,2,opt,name=toteID,proto3" json:"toteID,omitempty"`
	ProductID    string  `protobuf:"bytes,3,opt,name=productID,proto3" json:"productID,omitempty"`
	SkuID        string  `protobuf:"bytes,4,opt,name=SkuID,proto3" json:"SkuID,omitempty"`
	Quantity     int32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PricePerUnit float32 `protobuf:"fixed32,6,opt,name=pricePerUnit,proto3" json:"pricePerUnit,omitempty"`
}

func (x *AddProduct) Reset() {
	*x = AddProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProduct) ProtoMessage() {}

func (x *AddProduct) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProduct.ProtoReflect.Descriptor instead.
func (*AddProduct) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{15}
}

func (x *AddProduct) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

func (x *AddProduct) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *AddProduct) GetSkuID() string {
	if x != nil {
		return x.SkuID
	}
	return ""
}

func (x *AddProduct) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *AddProduct) GetPricePerUnit() float32 {
	if x != nil {
		return x.PricePerUnit
	}
	return 0
}

type AddProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api      string        `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	IpClient string        `protobuf:"bytes,2,opt,name=ipClient,proto3" json:"ipClient,omitempty"`
	ToteID   string        `protobuf:"bytes,3,opt,name=toteID,proto3" json:"toteID,omitempty"`
	Products []*AddProduct `protobuf:"bytes,4,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *AddProductsRequest) Reset() {
	*x = AddProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductsRequest) ProtoMessage() {}

func (x *AddProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductsRequest.ProtoReflect.Descriptor instead.
func (*AddProductsRequest) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{16}
}

func (x *AddProductsRequest) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *AddProductsRequest) GetIpClient() string {
	if x != nil {
		return x.IpClient
	}
	return ""
}

func (x *AddProductsRequest) GetToteID() string {
	if x != nil {
		return x.ToteID
	}
	return ""
}

func (x *AddProductsRequest) GetProducts() []*AddProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type AddProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api        string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	ProductsID []string `protobuf:"bytes,2,rep,name=productsID,proto3" json:"productsID,omitempty"`
}

func (x *AddProductsResponse) Reset() {
	*x = AddProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductsResponse) ProtoMessage() {}

func (x *AddProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductsResponse.ProtoReflect.Descriptor instead.
func (*AddProductsResponse) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{17}
}

func (x *AddProductsResponse) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *AddProductsResponse) GetProductsID() []string {
	if x != nil {
		return x.ProductsID
	}
	return nil
}

type HealthCheckToteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckToteRequest) Reset() {
	*x = HealthCheckToteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckToteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckToteRequest) ProtoMessage() {}

func (x *HealthCheckToteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckToteRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckToteRequest) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{18}
}

func (x *HealthCheckToteRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckToteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthCheckToteResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=tote.HealthCheckToteResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckToteResponse) Reset() {
	*x = HealthCheckToteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tote_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckToteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckToteResponse) ProtoMessage() {}

func (x *HealthCheckToteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tote_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckToteResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckToteResponse) Descriptor() ([]byte, []int) {
	return file_tote_proto_rawDescGZIP(), []int{19}
}

func (x *HealthCheckToteResponse) GetStatus() HealthCheckToteResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckToteResponse_UNKNOWN
}

var File_tote_proto protoreflect.FileDescriptor

var file_tote_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x6f,
	0x74, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x47,
	0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x74,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x73, 0x22, 0x7a, 0x0a,
	0x04, 0x54, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x02, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x6f,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x9f, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x52,
	0x06, 0x66, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x74, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x74, 0x65, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e,
	0x54, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x65,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x6f, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x65,
	0x52, 0x04, 0x74, 0x6f, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x39, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x53, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x61, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65,
	0x42, 0x61, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x64, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x22, 0x40,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x65, 0x49, 0x44,
	0x22, 0x7d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x65, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x65, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x22,
	0x4a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x22, 0x98, 0x01, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x6b, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x55, 0x6e,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50,
	0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x74, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x22, 0x47, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x22, 0x32, 0x0a, 0x16, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9a,
	0x01, 0x0a, 0x17, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x74, 0x6f, 0x74,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x3a, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f,
	0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x32, 0xdb, 0x03, 0x0a, 0x0b,
	0x54, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x74, 0x6f, 0x74,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x12, 0x18,
	0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x77, 0x54, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x74, 0x6f, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x54, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x74, 0x6f, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x74,
	0x6f, 0x74, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x6f, 0x74,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tote_proto_rawDescOnce sync.Once
	file_tote_proto_rawDescData = file_tote_proto_rawDesc
)

func file_tote_proto_rawDescGZIP() []byte {
	file_tote_proto_rawDescOnce.Do(func() {
		file_tote_proto_rawDescData = protoimpl.X.CompressGZIP(file_tote_proto_rawDescData)
	})
	return file_tote_proto_rawDescData
}

var file_tote_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tote_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_tote_proto_goTypes = []interface{}{
	(HealthCheckToteResponse_ServingStatus)(0), // 0: tote.HealthCheckToteResponse.ServingStatus
	(*UpdateToteProductsRequest)(nil),          // 1: tote.UpdateToteProductsRequest
	(*UpdateToteProduct)(nil),                  // 2: tote.UpdateToteProduct
	(*UpdateToteProductsResponse)(nil),         // 3: tote.UpdateToteProductsResponse
	(*Tote)(nil),                               // 4: tote.Tote
	(*Product)(nil),                            // 5: tote.Product
	(*GetToteBagsRequest)(nil),                 // 6: tote.GetToteBagsRequest
	(*GetToteBagsResponse)(nil),                // 7: tote.GetToteBagsResponse
	(*ToteDetail)(nil),                         // 8: tote.ToteDetail
	(*GetToteBagsSortBy)(nil),                  // 9: tote.GetToteBagsSortBy
	(*GetToteBagsFindBy)(nil),                  // 10: tote.GetToteBagsFindBy
	(*GetToteBagsFilterBy)(nil),                // 11: tote.GetToteBagsFilterBy
	(*CreateNewToteRequest)(nil),               // 12: tote.CreateNewToteRequest
	(*CreateNewToteReponse)(nil),               // 13: tote.CreateNewToteReponse
	(*DeleteProductsRequest)(nil),              // 14: tote.DeleteProductsRequest
	(*DeleteProductsResponse)(nil),             // 15: tote.DeleteProductsResponse
	(*AddProduct)(nil),                         // 16: tote.AddProduct
	(*AddProductsRequest)(nil),                 // 17: tote.AddProductsRequest
	(*AddProductsResponse)(nil),                // 18: tote.AddProductsResponse
	(*HealthCheckToteRequest)(nil),             // 19: tote.HealthCheckToteRequest
	(*HealthCheckToteResponse)(nil),            // 20: tote.HealthCheckToteResponse
}
var file_tote_proto_depIdxs = []int32{
	2,  // 0: tote.UpdateToteProductsRequest.updateToteProducts:type_name -> tote.UpdateToteProduct
	10, // 1: tote.GetToteBagsRequest.findBy:type_name -> tote.GetToteBagsFindBy
	11, // 2: tote.GetToteBagsRequest.filterBy:type_name -> tote.GetToteBagsFilterBy
	9,  // 3: tote.GetToteBagsRequest.sortBy:type_name -> tote.GetToteBagsSortBy
	8,  // 4: tote.GetToteBagsResponse.totesDetail:type_name -> tote.ToteDetail
	4,  // 5: tote.ToteDetail.tote:type_name -> tote.Tote
	5,  // 6: tote.ToteDetail.products:type_name -> tote.Product
	16, // 7: tote.AddProductsRequest.products:type_name -> tote.AddProduct
	0,  // 8: tote.HealthCheckToteResponse.status:type_name -> tote.HealthCheckToteResponse.ServingStatus
	17, // 9: tote.ToteService.AddProducts:input_type -> tote.AddProductsRequest
	6,  // 10: tote.ToteService.GetToteBags:input_type -> tote.GetToteBagsRequest
	14, // 11: tote.ToteService.DeleteProducts:input_type -> tote.DeleteProductsRequest
	12, // 12: tote.ToteService.CreateNewTote:input_type -> tote.CreateNewToteRequest
	1,  // 13: tote.ToteService.UpdateToteProducts:input_type -> tote.UpdateToteProductsRequest
	19, // 14: tote.ToteService.HealthCheckToteService:input_type -> tote.HealthCheckToteRequest
	18, // 15: tote.ToteService.AddProducts:output_type -> tote.AddProductsResponse
	7,  // 16: tote.ToteService.GetToteBags:output_type -> tote.GetToteBagsResponse
	15, // 17: tote.ToteService.DeleteProducts:output_type -> tote.DeleteProductsResponse
	13, // 18: tote.ToteService.CreateNewTote:output_type -> tote.CreateNewToteReponse
	3,  // 19: tote.ToteService.UpdateToteProducts:output_type -> tote.UpdateToteProductsResponse
	20, // 20: tote.ToteService.HealthCheckToteService:output_type -> tote.HealthCheckToteResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_tote_proto_init() }
func file_tote_proto_init() {
	if File_tote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateToteProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateToteProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateToteProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToteBagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToteBagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToteDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToteBagsSortBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToteBagsFindBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToteBagsFilterBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewToteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNewToteReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckToteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tote_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckToteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tote_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tote_proto_goTypes,
		DependencyIndexes: file_tote_proto_depIdxs,
		EnumInfos:         file_tote_proto_enumTypes,
		MessageInfos:      file_tote_proto_msgTypes,
	}.Build()
	File_tote_proto = out.File
	file_tote_proto_rawDesc = nil
	file_tote_proto_goTypes = nil
	file_tote_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ToteServiceClient is the client API for ToteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToteServiceClient interface {
	AddProducts(ctx context.Context, in *AddProductsRequest, opts ...grpc.CallOption) (*AddProductsResponse, error)
	GetToteBags(ctx context.Context, in *GetToteBagsRequest, opts ...grpc.CallOption) (*GetToteBagsResponse, error)
	DeleteProducts(ctx context.Context, in *DeleteProductsRequest, opts ...grpc.CallOption) (*DeleteProductsResponse, error)
	CreateNewTote(ctx context.Context, in *CreateNewToteRequest, opts ...grpc.CallOption) (*CreateNewToteReponse, error)
	UpdateToteProducts(ctx context.Context, in *UpdateToteProductsRequest, opts ...grpc.CallOption) (*UpdateToteProductsResponse, error)
	HealthCheckToteService(ctx context.Context, in *HealthCheckToteRequest, opts ...grpc.CallOption) (*HealthCheckToteResponse, error)
}

type toteServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewToteServiceClient(cc grpc.ClientConnInterface) ToteServiceClient {
	return &toteServiceClient{cc}
}

func (c *toteServiceClient) AddProducts(ctx context.Context, in *AddProductsRequest, opts ...grpc.CallOption) (*AddProductsResponse, error) {
	out := new(AddProductsResponse)
	err := c.cc.Invoke(ctx, "/tote.ToteService/AddProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toteServiceClient) GetToteBags(ctx context.Context, in *GetToteBagsRequest, opts ...grpc.CallOption) (*GetToteBagsResponse, error) {
	out := new(GetToteBagsResponse)
	err := c.cc.Invoke(ctx, "/tote.ToteService/GetToteBags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toteServiceClient) DeleteProducts(ctx context.Context, in *DeleteProductsRequest, opts ...grpc.CallOption) (*DeleteProductsResponse, error) {
	out := new(DeleteProductsResponse)
	err := c.cc.Invoke(ctx, "/tote.ToteService/DeleteProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toteServiceClient) CreateNewTote(ctx context.Context, in *CreateNewToteRequest, opts ...grpc.CallOption) (*CreateNewToteReponse, error) {
	out := new(CreateNewToteReponse)
	err := c.cc.Invoke(ctx, "/tote.ToteService/CreateNewTote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toteServiceClient) UpdateToteProducts(ctx context.Context, in *UpdateToteProductsRequest, opts ...grpc.CallOption) (*UpdateToteProductsResponse, error) {
	out := new(UpdateToteProductsResponse)
	err := c.cc.Invoke(ctx, "/tote.ToteService/UpdateToteProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toteServiceClient) HealthCheckToteService(ctx context.Context, in *HealthCheckToteRequest, opts ...grpc.CallOption) (*HealthCheckToteResponse, error) {
	out := new(HealthCheckToteResponse)
	err := c.cc.Invoke(ctx, "/tote.ToteService/HealthCheckToteService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToteServiceServer is the server API for ToteService service.
type ToteServiceServer interface {
	AddProducts(context.Context, *AddProductsRequest) (*AddProductsResponse, error)
	GetToteBags(context.Context, *GetToteBagsRequest) (*GetToteBagsResponse, error)
	DeleteProducts(context.Context, *DeleteProductsRequest) (*DeleteProductsResponse, error)
	CreateNewTote(context.Context, *CreateNewToteRequest) (*CreateNewToteReponse, error)
	UpdateToteProducts(context.Context, *UpdateToteProductsRequest) (*UpdateToteProductsResponse, error)
	HealthCheckToteService(context.Context, *HealthCheckToteRequest) (*HealthCheckToteResponse, error)
}

// UnimplementedToteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedToteServiceServer struct {
}

func (*UnimplementedToteServiceServer) AddProducts(context.Context, *AddProductsRequest) (*AddProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProducts not implemented")
}
func (*UnimplementedToteServiceServer) GetToteBags(context.Context, *GetToteBagsRequest) (*GetToteBagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToteBags not implemented")
}
func (*UnimplementedToteServiceServer) DeleteProducts(context.Context, *DeleteProductsRequest) (*DeleteProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProducts not implemented")
}
func (*UnimplementedToteServiceServer) CreateNewTote(context.Context, *CreateNewToteRequest) (*CreateNewToteReponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewTote not implemented")
}
func (*UnimplementedToteServiceServer) UpdateToteProducts(context.Context, *UpdateToteProductsRequest) (*UpdateToteProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateToteProducts not implemented")
}
func (*UnimplementedToteServiceServer) HealthCheckToteService(context.Context, *HealthCheckToteRequest) (*HealthCheckToteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheckToteService not implemented")
}

func RegisterToteServiceServer(s *grpc.Server, srv ToteServiceServer) {
	s.RegisterService(&_ToteService_serviceDesc, srv)
}

func _ToteService_AddProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToteServiceServer).AddProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tote.ToteService/AddProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToteServiceServer).AddProducts(ctx, req.(*AddProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToteService_GetToteBags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetToteBagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToteServiceServer).GetToteBags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tote.ToteService/GetToteBags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToteServiceServer).GetToteBags(ctx, req.(*GetToteBagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToteService_DeleteProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToteServiceServer).DeleteProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tote.ToteService/DeleteProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToteServiceServer).DeleteProducts(ctx, req.(*DeleteProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToteService_CreateNewTote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNewToteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToteServiceServer).CreateNewTote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tote.ToteService/CreateNewTote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToteServiceServer).CreateNewTote(ctx, req.(*CreateNewToteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToteService_UpdateToteProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateToteProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToteServiceServer).UpdateToteProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tote.ToteService/UpdateToteProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToteServiceServer).UpdateToteProducts(ctx, req.(*UpdateToteProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToteService_HealthCheckToteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckToteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToteServiceServer).HealthCheckToteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tote.ToteService/HealthCheckToteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToteServiceServer).HealthCheckToteService(ctx, req.(*HealthCheckToteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tote.ToteService",
	HandlerType: (*ToteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddProducts",
			Handler:    _ToteService_AddProducts_Handler,
		},
		{
			MethodName: "GetToteBags",
			Handler:    _ToteService_GetToteBags_Handler,
		},
		{
			MethodName: "DeleteProducts",
			Handler:    _ToteService_DeleteProducts_Handler,
		},
		{
			MethodName: "CreateNewTote",
			Handler:    _ToteService_CreateNewTote_Handler,
		},
		{
			MethodName: "UpdateToteProducts",
			Handler:    _ToteService_UpdateToteProducts_Handler,
		},
		{
			MethodName: "HealthCheckToteService",
			Handler:    _ToteService_HealthCheckToteService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tote.proto",
}
