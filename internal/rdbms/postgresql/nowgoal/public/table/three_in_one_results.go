//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ThreeInOneResults = newThreeInOneResultsTable()

type threeInOneResultsTable struct {
	postgres.Table

	//Columns
	ResultID                  postgres.ColumnString
	LeftTeam                  postgres.ColumnString
	RightTeam                 postgres.ColumnString
	FirstHalfScore            postgres.ColumnString
	SecondHalfScore           postgres.ColumnString
	FinalScore                postgres.ColumnString
	EarlyHandicapHomeHalf     postgres.ColumnFloat
	EarlyHandicapHandicapHalf postgres.ColumnString
	EarlyHandicapAwayHalf     postgres.ColumnFloat
	EarlyOverUnderOverHalf    postgres.ColumnFloat
	EarlyOverUnderOUHalf      postgres.ColumnString
	EarlyOverUnderUnderHalf   postgres.ColumnFloat
	StartHandicapHomeHalf     postgres.ColumnFloat
	StartHandicapHandicapHalf postgres.ColumnString
	StartHandicapAwayHalf     postgres.ColumnFloat
	StartOverUnderOverHalf    postgres.ColumnFloat
	StartOverUnderOUHalf      postgres.ColumnString
	StartOverUnderUnderHalf   postgres.ColumnFloat
	EarlyHandicapHomeFull     postgres.ColumnFloat
	EarlyHandicapHandicapFull postgres.ColumnString
	EarlyHandicapAwayFull     postgres.ColumnFloat
	EarlyOverUnderOverFull    postgres.ColumnFloat
	EarlyOverUnderOUFull      postgres.ColumnString
	EarlyOverUnderUnderFull   postgres.ColumnFloat
	StartHandicapHomeFull     postgres.ColumnFloat
	StartHandicapHandicapFull postgres.ColumnString
	StartHandicapAwayFull     postgres.ColumnFloat
	StartOverUnderOverFull    postgres.ColumnFloat
	StartOverUnderOUFull      postgres.ColumnString
	StartOverUnderUnderFull   postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ThreeInOneResultsTable struct {
	threeInOneResultsTable

	EXCLUDED threeInOneResultsTable
}

// AS creates new ThreeInOneResultsTable with assigned alias
func (a *ThreeInOneResultsTable) AS(alias string) *ThreeInOneResultsTable {
	aliasTable := newThreeInOneResultsTable()
	aliasTable.Table.AS(alias)
	return aliasTable
}

func newThreeInOneResultsTable() *ThreeInOneResultsTable {
	return &ThreeInOneResultsTable{
		threeInOneResultsTable: newThreeInOneResultsTableImpl("public", "three_in_one_results"),
		EXCLUDED:               newThreeInOneResultsTableImpl("", "excluded"),
	}
}

func newThreeInOneResultsTableImpl(schemaName, tableName string) threeInOneResultsTable {
	var (
		ResultIDColumn                  = postgres.StringColumn("result_id")
		LeftTeamColumn                  = postgres.StringColumn("left_team")
		RightTeamColumn                 = postgres.StringColumn("right_team")
		FirstHalfScoreColumn            = postgres.StringColumn("first_half_score")
		SecondHalfScoreColumn           = postgres.StringColumn("second_half_score")
		FinalScoreColumn                = postgres.StringColumn("final_score")
		EarlyHandicapHomeHalfColumn     = postgres.FloatColumn("early_handicap_home_half")
		EarlyHandicapHandicapHalfColumn = postgres.StringColumn("early_handicap_handicap_half")
		EarlyHandicapAwayHalfColumn     = postgres.FloatColumn("early_handicap_away_half")
		EarlyOverUnderOverHalfColumn    = postgres.FloatColumn("early_over_under_over_half")
		EarlyOverUnderOUHalfColumn      = postgres.StringColumn("early_over_under_o_u_half")
		EarlyOverUnderUnderHalfColumn   = postgres.FloatColumn("early_over_under_under_half")
		StartHandicapHomeHalfColumn     = postgres.FloatColumn("start_handicap_home_half")
		StartHandicapHandicapHalfColumn = postgres.StringColumn("start_handicap_handicap_half")
		StartHandicapAwayHalfColumn     = postgres.FloatColumn("start_handicap_away_half")
		StartOverUnderOverHalfColumn    = postgres.FloatColumn("start_over_under_over_half")
		StartOverUnderOUHalfColumn      = postgres.StringColumn("start_over_under_o_u_half")
		StartOverUnderUnderHalfColumn   = postgres.FloatColumn("start_over_under_under_half")
		EarlyHandicapHomeFullColumn     = postgres.FloatColumn("early_handicap_home_full")
		EarlyHandicapHandicapFullColumn = postgres.StringColumn("early_handicap_handicap_full")
		EarlyHandicapAwayFullColumn     = postgres.FloatColumn("early_handicap_away_full")
		EarlyOverUnderOverFullColumn    = postgres.FloatColumn("early_over_under_over_full")
		EarlyOverUnderOUFullColumn      = postgres.StringColumn("early_over_under_o_u_full")
		EarlyOverUnderUnderFullColumn   = postgres.FloatColumn("early_over_under_under_full")
		StartHandicapHomeFullColumn     = postgres.FloatColumn("start_handicap_home_full")
		StartHandicapHandicapFullColumn = postgres.StringColumn("start_handicap_handicap_full")
		StartHandicapAwayFullColumn     = postgres.FloatColumn("start_handicap_away_full")
		StartOverUnderOverFullColumn    = postgres.FloatColumn("start_over_under_over_full")
		StartOverUnderOUFullColumn      = postgres.StringColumn("start_over_under_o_u_full")
		StartOverUnderUnderFullColumn   = postgres.FloatColumn("start_over_under_under_full")
		allColumns                      = postgres.ColumnList{ResultIDColumn, LeftTeamColumn, RightTeamColumn, FirstHalfScoreColumn, SecondHalfScoreColumn, FinalScoreColumn, EarlyHandicapHomeHalfColumn, EarlyHandicapHandicapHalfColumn, EarlyHandicapAwayHalfColumn, EarlyOverUnderOverHalfColumn, EarlyOverUnderOUHalfColumn, EarlyOverUnderUnderHalfColumn, StartHandicapHomeHalfColumn, StartHandicapHandicapHalfColumn, StartHandicapAwayHalfColumn, StartOverUnderOverHalfColumn, StartOverUnderOUHalfColumn, StartOverUnderUnderHalfColumn, EarlyHandicapHomeFullColumn, EarlyHandicapHandicapFullColumn, EarlyHandicapAwayFullColumn, EarlyOverUnderOverFullColumn, EarlyOverUnderOUFullColumn, EarlyOverUnderUnderFullColumn, StartHandicapHomeFullColumn, StartHandicapHandicapFullColumn, StartHandicapAwayFullColumn, StartOverUnderOverFullColumn, StartOverUnderOUFullColumn, StartOverUnderUnderFullColumn}
		mutableColumns                  = postgres.ColumnList{LeftTeamColumn, RightTeamColumn, FirstHalfScoreColumn, SecondHalfScoreColumn, FinalScoreColumn, EarlyHandicapHomeHalfColumn, EarlyHandicapHandicapHalfColumn, EarlyHandicapAwayHalfColumn, EarlyOverUnderOverHalfColumn, EarlyOverUnderOUHalfColumn, EarlyOverUnderUnderHalfColumn, StartHandicapHomeHalfColumn, StartHandicapHandicapHalfColumn, StartHandicapAwayHalfColumn, StartOverUnderOverHalfColumn, StartOverUnderOUHalfColumn, StartOverUnderUnderHalfColumn, EarlyHandicapHomeFullColumn, EarlyHandicapHandicapFullColumn, EarlyHandicapAwayFullColumn, EarlyOverUnderOverFullColumn, EarlyOverUnderOUFullColumn, EarlyOverUnderUnderFullColumn, StartHandicapHomeFullColumn, StartHandicapHandicapFullColumn, StartHandicapAwayFullColumn, StartOverUnderOverFullColumn, StartOverUnderOUFullColumn, StartOverUnderUnderFullColumn}
	)

	return threeInOneResultsTable{
		Table: postgres.NewTable(schemaName, tableName, allColumns...),

		//Columns
		ResultID:                  ResultIDColumn,
		LeftTeam:                  LeftTeamColumn,
		RightTeam:                 RightTeamColumn,
		FirstHalfScore:            FirstHalfScoreColumn,
		SecondHalfScore:           SecondHalfScoreColumn,
		FinalScore:                FinalScoreColumn,
		EarlyHandicapHomeHalf:     EarlyHandicapHomeHalfColumn,
		EarlyHandicapHandicapHalf: EarlyHandicapHandicapHalfColumn,
		EarlyHandicapAwayHalf:     EarlyHandicapAwayHalfColumn,
		EarlyOverUnderOverHalf:    EarlyOverUnderOverHalfColumn,
		EarlyOverUnderOUHalf:      EarlyOverUnderOUHalfColumn,
		EarlyOverUnderUnderHalf:   EarlyOverUnderUnderHalfColumn,
		StartHandicapHomeHalf:     StartHandicapHomeHalfColumn,
		StartHandicapHandicapHalf: StartHandicapHandicapHalfColumn,
		StartHandicapAwayHalf:     StartHandicapAwayHalfColumn,
		StartOverUnderOverHalf:    StartOverUnderOverHalfColumn,
		StartOverUnderOUHalf:      StartOverUnderOUHalfColumn,
		StartOverUnderUnderHalf:   StartOverUnderUnderHalfColumn,
		EarlyHandicapHomeFull:     EarlyHandicapHomeFullColumn,
		EarlyHandicapHandicapFull: EarlyHandicapHandicapFullColumn,
		EarlyHandicapAwayFull:     EarlyHandicapAwayFullColumn,
		EarlyOverUnderOverFull:    EarlyOverUnderOverFullColumn,
		EarlyOverUnderOUFull:      EarlyOverUnderOUFullColumn,
		EarlyOverUnderUnderFull:   EarlyOverUnderUnderFullColumn,
		StartHandicapHomeFull:     StartHandicapHomeFullColumn,
		StartHandicapHandicapFull: StartHandicapHandicapFullColumn,
		StartHandicapAwayFull:     StartHandicapAwayFullColumn,
		StartOverUnderOverFull:    StartOverUnderOverFullColumn,
		StartOverUnderOUFull:      StartOverUnderOUFullColumn,
		StartOverUnderUnderFull:   StartOverUnderUnderFullColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
