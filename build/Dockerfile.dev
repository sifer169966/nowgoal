FROM golang:1.15 as builder
WORKDIR /app

# Retrieve application dependencies.
# This allows the container build to reuse cached dependencies.
COPY go.* ./
RUN go mod download

# Copy local code to the container image.
COPY . ./

# Build the binary.
RUN CGO_ENABLED=0 GOOS=linux go build -mod=readonly -v -o server cmd/api/main.go

# multi-stage ...
FROM alpine:3
RUN apk add --no-cache ca-certificates

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/server /app/cmd/
COPY --from=builder /app/cert /app/cert
COPY --from=builder /app/configs /app/configs

#COPY --from=builder /app /app/cmd
WORKDIR /app

RUN cd cmd && ls -al

# Run the web service on container startup.
#CMD ./cmd/server
ENTRYPOINT ["./cmd/server", "--env=develop"]